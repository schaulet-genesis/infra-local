services:
  dns:
    build:
      context: ./docker/dns
      dockerfile: Dockerfile
    container_name: dns
    restart: unless-stopped
    command: --domain internal --record *:127.0.0.1
    volumes:
      - /var/run/docker.sock:/docker.sock
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    # labels:
    #   caddy: dns.app.internal
    #   caddy.reverse_proxy: "{{upstreams 80}}"

  caddy:
    container_name: caddy
    hostname: caddy
    domainname: internal
    build:
      context: ./docker/caddy
      dockerfile: Dockerfile
      args:
        USER_ID: 1000
        GROUP_ID: 1000
    restart: unless-stopped
    ports:
      - 10080:10080
      - 10443:10443
    networks:
      web:
        aliases:
          - "caddy.internal"
    environment:
      CADDY_INGRESS_NETWORKS: web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime
      - /etc/timezone:/etc/timezone
      - ./data/caddy:/data
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
    labels:
      caddy.http_port: 10080
      caddy.https_port: 10443

  whoami:
    image: containous/whoami
    restart: unless-stopped
    container_name: whoami
    networks:
      - web
    labels:
      caddy: http://whoami.app.internal
      caddy.reverse_proxy: "{{upstreams 80}}"

  maildev:
    image: maildev/maildev
    restart: unless-stopped
    container_name: maildev
    environment:
      - TZ=Europe/Paris
      - MAILDEV_WEB_PORT=80
      - MAILDEV_SMTP_PORT=25
    ports:
      - "25:25"
    networks:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
    labels:
      caddy: http://maildev.app.internal
      caddy.reverse_proxy: "{{upstreams 80}}"

networks:
  sonar-internal:
  web:
    external: true
  db-internal:
    external: true
